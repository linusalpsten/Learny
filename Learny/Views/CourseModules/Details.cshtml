@model Learny.ViewModels.ModuleViewModel
@using Learny.Settings

@{
    ViewBag.Title = "Details";
}

<h5>Kurs: @Html.ActionLink(Model.FullCourseName, "Details", "Courses", new { id = Model.CourseId }, null)</h5>

<div class="container-fluid">
    <div class="row">

        <div class="col-sm-8">

            <div class="panel panel-default">

                <div class="panel-heading">
                    <span class="panelHeader">Modul: @Html.DisplayFor(model => model.Name)</span>

                    @if (Request.IsAuthenticated && User.IsInRole(RoleName.teacher))
                    {
                        <span class="pull-right">
                            @Html.ActionLink("Ändra", "Edit", new { id = Model.Id })
                        </span>
                    }
                </div>

                <div class="panel-body">
                    <p>
                        @Html.DisplayFor(model => model.Description)
                    </p>

                    <p>
                        @Html.DisplayNameFor(model => model.StartDate):
                        @Html.DisplayFor(model => model.StartDate)
                        <br />
                        @Html.DisplayNameFor(model => model.EndDate):
                        @Html.DisplayFor(model => model.EndDate)
                    </p>

                    @if (Request.IsAuthenticated && User.IsInRole(RoleName.teacher))
                    {
                        <p>@Html.ActionLink("Lägg till aktivitet", "Create", "ModuleActivities", new { Id = Model.Id }, null)</p>
                    }

                </div>

                <table class="table">
                    <tr>
                        <th class="tHeader"> Typ   </th>
                        <th class="tHeader"> @Html.DisplayNameFor(model => model.Activities)   </th>
                        <th class="tHeader"> @Html.DisplayNameFor(model => model.StartDate)    </th>
                        <th class="tHeader"> @Html.DisplayNameFor(model => model.EndDate)      </th>
                    </tr>

                    @foreach (var item in Model.Activities)
                    {
                        <tr>
                            <td> @Html.DisplayFor(modelItem => item.ActivityType.ShortName)    </td>
                            <td> @Html.ActionLink(item.Name, "Details", "ModuleActivities", new { id = item.Id }, null)  </td>
                            <td> @Html.DisplayFor(modelItem => item.StartDate)       </td>
                            <td> @Html.DisplayFor(modelItem => item.EndDate)         </td>
                        </tr>
                    }

                </table>

            </div>
        </div>

            <div class="col-sm-1">
                @*Empty column*@
            </div>

            @if (Model.HaveDocuments || User.IsInRole(RoleName.teacher))
            {
                <div class="col-sm-4">
                    <div class="panel panel-default">

                        <div class="panel-heading">
                            Dokument
                            @if (Request.IsAuthenticated && User.IsInRole(RoleName.teacher))
                            {
                                <span class="pull-right">
                                    @Html.ActionLink("Lägg till dokument", "UploadDocument", "Document", new { moduleId = Model.Id }, null)
                                </span>
                            }
                        </div>

                        <div class="panel-body">
                            @Html.Action("Documents", "Document", new { moduleId = Model.Id })
                        </div>

                    </div>
                </div>
            }


        </div>

</div>
