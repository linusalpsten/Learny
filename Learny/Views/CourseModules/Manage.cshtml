@model Learny.ViewModels.ModuleViewModel
@{
    ViewBag.Title = "Moduler";
}

<h5>Kurs: @Html.ActionLink(Model.FullCourseName, "Details", "Courses", new { id = Model.CourseId }, null)</h5>

@{
    var actionName = "";
}


<div class="panel panel-default">

    <div class="panel-heading">

        @if (Model.EditMode)
        {
            actionName = "Edit";
            
                <span class="panelHeader">@Model.Name</span>

        }
        else
        {
            actionName = "Create";
            
                <span class="panelHeader">Ny modul</span>

        }

    </div>

    <div class="panel-body">
        @using (Html.BeginForm(actionName, "CourseModules"))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                @Html.HiddenFor(model => model.CourseId) @*Http post courseId to create controller*@
                @Html.HiddenFor(model => model.FullCourseName)
                @Html.HiddenFor(model => model.EditMode)
                @Html.HiddenFor(model => model.ShowModuleList)


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        @if (Model.EditMode)
                        {
                            <input type="submit" value="Spara ändringar" class="btn btn-default" />
                            @:&nbsp;
                            if (Model.ShowModuleList)
                            {
                                @Html.ActionLink("Avbryt", "Create", new { id = Model.CourseId, ShowModuleList = Model.ShowModuleList }, htmlAttributes: new { @class = "btn btn-default" });
                            }
                            else
                            {
                                @Html.ActionLink("Avbryt", "Details", new { id = Model.CourseId }, htmlAttributes: new { @class = "btn btn-default" });
                            }
                            @:&nbsp;
                            @Html.ActionLink("Tag bort", "Delete", new { id = Model.Id }, new { @class = "btn btn-default" })

                        }
                        else
                        {
                            <input type="submit" value="Lägg till" class="btn btn-default" />
                        }
                    </div>
                </div>
            </div>
        }
        <br />

        @if (TempData["FeedbackMessage"] != null)
        {
            <div class="alert alert-success alert-dismissable fade in">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                @TempData["FeedbackMessage"]
                @{var msgObj = (Learny.Models.CourseModule)@TempData["FeedbackData"];}
                <br /><br />
                @Html.LabelFor(m => msgObj.Name): @Html.DisplayFor(m => msgObj.Name)
                <br />
                @Html.LabelFor(m => msgObj.Description): @Html.DisplayFor(m => msgObj.Description)
                <br />
                @Html.LabelFor(m => msgObj.StartDate): @Html.DisplayFor(m => msgObj.StartDate)
                <br />
                @Html.LabelFor(m => msgObj.EndDate): @Html.DisplayFor(m => msgObj.EndDate)
                <br /><br />
                @if (!Model.EditMode)
                {
                    @Html.ActionLink("Ändra", "Edit", new { id = msgObj.Id, ShowModuleList = Model.ShowModuleList });
                    @: | 
                }
                @Html.ActionLink("Till modulen", "Details", "CourseModules", new { id = msgObj.Id }, null)
                <br /><br />
            </div>
                    }


        @if (Model.ShowModuleList)
        {

            @*View partial view with modules*@
            @Html.Action("Modules", "CourseModules", new { id = Model.CourseId, linkToEditInCreateView = true })
        }


    </div>

</div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
            <script src="~/Scripts/FillEndDate.js"></script>
        }
