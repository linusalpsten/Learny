@model Learny.ViewModels.CourseCreateViewModel

@{
    ViewBag.Title = "Ändra kurs";
}

<div class="panel panel-default">

    <div class="panel-heading">

        <span class="panelHeader">@Model.FullCourseName</span>

    </div>

    <div class="panel-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CourseCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CourseCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CourseCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Spara ändringar" class="btn btn-default" />
                        &nbsp;
                        @Html.ActionLink("Tag bort", "Delete", new { id = Model.Id }, new { @class = "btn btn-default" })
                    </div>
                </div>
            </div>
        }
        <br />

        @if (TempData["FeedbackMessage"] != null)
        {
            <div class="alert alert-success alert-dismissable fade in">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                @TempData["FeedbackMessage"]
                @{var msgObj = (Learny.Models.Course)@TempData["FeedbackData"];}
                <br /><br />
                @Html.LabelFor(m => msgObj.Name): @Html.DisplayFor(m => msgObj.Name)
                <br />
                @Html.LabelFor(m => msgObj.Description): @Html.DisplayFor(m => msgObj.Description)
                <br />
                @Html.LabelFor(m => msgObj.StartDate): @Html.DisplayFor(m => msgObj.StartDate)
                <br />
                @Html.LabelFor(m => msgObj.EndDate): @Html.DisplayFor(m => msgObj.EndDate)
                <br /><br />
                
                @Html.ActionLink("Ändra", "Edit", new { id = msgObj.Id })
                <br /><br />
            </div>
                    }

        <div>
            @Html.ActionLink("Tillbaka till kursen", "Details", "Courses", new { id = Model.Id }, null)
        </div>

    </div>
</div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
