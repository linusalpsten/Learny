@model Learny.ViewModels.TeacherViewModel

@{
    ViewBag.Title = "Lägg till ny lärare";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Spara" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@if (TempData["FeedbackMessage"] != null)
{
    <div class="alert alert-success alert-dismissable fade in">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        @TempData["FeedbackMessage"]
        @{var msgObj = (Learny.ViewModels.TeacherViewModel)@TempData["FeedbackData"];}
        <br /><br />
        @Html.LabelFor(m => msgObj.Name): @Html.DisplayFor(m => msgObj.Name)
        <br />
        @Html.LabelFor(m => msgObj.Email): @Html.DisplayFor(m => msgObj.Email)
        <br /><br />
        @if (!Model.Edit)
        {
            @Html.ActionLink("Ändra |", "Edit", new { id = msgObj.Id, listEdit = true });
            //|
        }
        @Html.ActionLink("Visa modul", "Details", "CourseModules", new { id = msgObj.Id }, null)
    </div>
}


    <hr />
    <h4>Lärare</h4>
    @Html.Action("ListTeachers", "Teacher")


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
