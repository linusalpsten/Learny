@model Learny.ViewModels.TeacherCreateViewModel

@{
    ViewBag.Title = "Lägg till ny lärare";
}

<div class="panel panel-default">

    <div class="panel-heading">
        <span class="panelHeader">@ViewBag.Title</span>
    </div>

    <div class="panel-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary("", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Lägg till" class="btn btn-default" />
                    </div>
                </div>
            </div>

        }

        @if (TempData["FeedbackMessage"] != null)
        {
            <div class="alert alert-success alert-dismissable fade in">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                @TempData["FeedbackMessage"]
                @{var msgObj = (Learny.ViewModels.TeacherViewModel)@TempData["FeedbackData"];}
                <br /><br />
                @Html.LabelFor(m => msgObj.Name) @Html.DisplayFor(m => msgObj.Name)
                <br />
                @Html.LabelFor(m => msgObj.Email) @Html.DisplayFor(m => msgObj.Email)

            </div>
        }

        <br /><br />

        @Html.Action("ListTeachers", "Teacher")

    </div>
</div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
